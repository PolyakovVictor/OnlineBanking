version: '3'
services:
  backend:
    build:
      context: ./backend
    restart: on-failure:10
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - DJANGO_EMAIL_BACKEND=${DJANGO_EMAIL_BACKEND}
      - DJANGO_EMAIL_HOST=${DJANGO_EMAIL_HOST}
      - DJANGO_EMAIL_PORT=${DJANGO_EMAIL_PORT}
      - DJANGO_EMAIL_HOST_USER=${DJANGO_EMAIL_HOST_USER}
      - DJANGO_EMAIL_HOST_PASSWORD=${DJANGO_EMAIL_HOST_PASSWORD}
      - DJANGO_EMAIL_USE_TLS=${DJANGO_EMAIL_USE_TLS}

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"
